version: "3.8"

services:
  server-web:
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
    container_name: server-web
    depends_on:
      - backend-app
    ports:
      - "80:80"
    networks:
      - network-app
    volumes:
        - ./backend:/var/www/html
        - ./backend/var/log/nginx:/var/log/nginx
  backend-app:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    container_name: backend-app
    depends_on:
      - db-mysql
      - db-redis
      - mail-app
    networks:
      - network-app
    volumes:
      - ./backend:/var/www/html
      - ./backend/var/log/php:/var/log/php
  db-mysql:
    image: mysql:5.7
    container_name: db-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: pathy
      MYSQL_PASSWORD: fayette
      MYSQL_DATABASE: backend
    ports:
      - "3307:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - network-app
  db-redis:
    image: redis:alpine
    container_name: db-redis
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - network-app
  mail-app:
    image: schickling/mailcatcher
    container_name: mail-app
    networks:
      - network-app
    ports:
      - "1080:1080"
      - "1025:1025"
  frontend-app:
    build:
        context: .
        dockerfile: .docker/angular/Dockerfile
    container_name: frontend-app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "4200:4200"
    networks:
      - network-app
    stdin_open: true
    tty: true
networks:
  network-app:
    driver: bridge